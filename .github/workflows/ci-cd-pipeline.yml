name: CI/CD Pipeline to EKS

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_TAG: latest
  AWS_REGION: us-east-1
  ECR_REPO_NAME: docker-pipeline-demo
  KUBE_NAMESPACE: docker-pipeline

permissions:
  contents: read
  packages: write
  id-token: write  # Required for OIDC auth to AWS

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          pip install -r app/requirements.txt

      - name: Run linter (Flake8)
        run: |
          pip install flake8
          flake8 app/ --output-file=flake8-report.txt --format=default || true
          cat flake8-report.txt

      - name: Run tests (optional)
        run: |
          pip install pytest pytest-cov
          pytest -v --cov=app --cov-report=xml --junitxml=results.xml || true

      - name: Configure AWS Credentials (Access Key)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create ECR repository if not exists
        run: |
          aws ecr describe-repositories --repository-names docker-pipeline-demo || \
          aws ecr create-repository --repository-name docker-pipeline-demo

      - name: Build and Push Docker Image to ECR
        run: |
          ECR_REPO_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}
          docker build -t $ECR_REPO_URI:${{ env.IMAGE_TAG }} .
          docker push $ECR_REPO_URI:${{ env.IMAGE_TAG }}

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.29.0

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region us-east-1 --name Production

      - name: Deploy to EKS using Helm
        run: |
          echo "ECR_REPO_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}" >> $GITHUB_ENV
          helm upgrade --install docker-pipeline-demo ./helm-chart \
            --namespace production \
            --create-namespace \
            --set image.repository=$ECR_REPO_URI \
            --set image.tag=latest
